[app]
;Flask app secret key (encrypted)
secret_key = <<replace with secret_key to be encrypted>>
;Send email notifications, false ot true
send_emails = false
;Username for authentication to SMTP server
smtp_user = user@domain.com
;Password for authentication to SMTP server (encrypted)
smtp_password = <<replace with smtp_password_to be encrypted>>
smtp_default_sender = no-reply@domain.com
admin_email = user@domain.com
;SMTP server name or IP address
smtp_server = smtp.domain.com
;SMTP server port
smtp_server_port = 	465

[postgresql]
;---Main DB section---
;Default is "localhost". Main cluster port 5432
host = localhost
;Default is "postgres"
database = postgres
;postgres admin user
user = postgres
;postgres admin user password (encrypted)
password = <<replace with db password to be encrypted>>
;---Sample DB section (used for sample data, accessible by public)---
;sample db host. Default is "localhost". Main cluster port 5432
sample_db_host = localhost
;sample_db cluster/port (specify the port if on different cluster, leave blank if on main cluster)
sample_db_port = 
;Default is "sample_db"
sample_db = sample_db
;read only user
ro_user = public_ro
;read only user password (encrypted)
ro_password = <<replace with db password to be encrypted>>

[path]
;Logs directory
logs_dir = /var/www/domain.com/logs/
;The txt file with the PID of the current user process will be stored here
pid_file_dir = /var/www/domain.com/temp/
;The flat files with data from Garmin Connect, MyFitnessPal, Diasend, Glimp, LibreView, Muse/Mind Monitor, Bearable will be downloaded here.
download_dir = /var/www/domain.com/temp/XML_Dump/garmin_connect_export                 
;This is where the encryption passphrase is writen temporarily after reload and deleted after the app loads succesfully                             
temp_file_path = /var/www/domain.com/temp/.temp.txt


[autosynch]
;Time in seconds that the autosynch_loop waits before the next iteration
interval = 43200

;Crypto variables
[crypto]
salt_size = 16
number_of_iterations = 2000
aes_multiple = 16

;Requires App registration/setup with Dropbox (https://www.dropbox.com/developers/apps).Leave blank if not setup (Will grey-out the Archive section in index.html).
[dropbox]
;Has the app been integrated with Dropbox (https://www.dropbox.com/developers/apps) ? true or false.
integrated_with_dropbox = false
;If integrated, Dropbox app key (encrypted) 
;If not integrated leave blank
app_key = <<replace with app_key to be encrypted>>
;If integrated, Dropbox app secret (encrypted)
;If not integrated leave blank	
app_secret = <<replace with app_secret to be encrypted>>
;If integrated, redirect URI
;If not integrated leave blank
redirect_uri = http://127.0.0.1:5000/dropbox_confirm

;Requires App registration/setup with Oura (https://cloud.ouraring.com/oauth/applications#).Leave blank if not setup.
[oura]
;If integrated, Oura app client id (encrypted)
;If not integrated leave blank
oura_client_id = <<replace with client_id to be encrypted>>
;If integrated, Oura app client secret (encrypted)
;If not integrated leave blank
oura_client_secret = <<replace with client_secret to be encrypted>>
;If integrated, Oura authentication URL
;If not integrated leave blank
oura_auth_url = https://cloud.ouraring.com/oauth/authorize
;If integrated, Oura token URL
;If not integrated leave blank
oura_token_url = https://api.ouraring.com/oauth/token

[anticaptcha]
;Required to solve the Diasend captcha. Can be acquired from https://anti-captcha.com/. Can be left blank if Diasend import not required. 
api_key = <<replace with api_key to be encrypted>>

[archive]
;Do not delete download files after DB insert (false or true)
preserve_files = true


